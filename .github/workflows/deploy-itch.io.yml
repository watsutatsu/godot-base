name: Build and Deploy to itch.io

env:
  GODOT_VERSION: 4.2.2
  EXPORT_NAME: test-project
  PROJECT_PATH: games/test-project

on:
  push:
    branches:
      - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  export-web:
    name: Web Export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.2.2
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Web Build
        run: |
          mkdir -v -p ${{ env.PROJECT_PATH }}/build/web
          cd ${{ env.PROJECT_PATH }}
          godot --headless --verbose --export-release "HTML5" build/web/index.html
      - name: debug
        run: |
          find ./ -type f
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: web-build
          path: ${{ env.PROJECT_PATH }}/build/web
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.PROJECT_PATH }}/build/web

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: export-web
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4